     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit ,printf 
     8                                  extern vocale             ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll 
    10                                  import printf msvcrt.dll   ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 92BAFAEFCDAB000022-         s1 dq 0xabcdeffaba92,0xabcdeffe322,0xaaabc12345,0xeee60ffe2aeef21
    15 00000009 E3FFDEBC0A00004523-
    15 00000012 C1ABAA00000021EFAE-
    15 0000001B E2FF60EE0E         
    16                                      len equ ($-s1)/8
    17 00000020 00000000<rept>              s2 times len dd 0
    18 00000030 2564                        msj db "%d"
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 B904000000                      mov ecx,len
    23 00000005 BE[00000000]                    mov esi,s1
    24 0000000A BF[20000000]                    mov edi,s2
    25                                          repeta:
    26 0000000F AD                                  lodsd
    27 00000010 66AD                                lodsw
    28 00000012 6689C3                              mov bx,ax
    29 00000015 66AD                                lodsw
    30 00000017 6639D8                              cmp ax,bx
    31 0000001A 7E09                                jng mai_mic
    32 0000001C 83EE04                              sub esi,4
    33 0000001F AD                                  lodsd
    34 00000020 8907                                mov [edi],eax
    35 00000022 83C704                              add edi,4
    36                                              mai_mic:
    37 00000025 49                                  dec ecx
    38 00000026 75E7                                jnz repeta
    39                                              
    40 00000028 68[20000000]                    push dword s2
    41 0000002D E8(00000000)                    call vocale
    42                                          
    43 00000032 50                              push eax
    44 00000033 68[30000000]                    push msj
    45 00000038 FF15[00000000]                  call [printf]
    46 0000003E 83C408                          add esp,8 
    47 00000041 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000043 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
